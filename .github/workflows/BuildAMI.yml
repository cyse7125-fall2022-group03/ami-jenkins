# This is a basic workflow to help you get started with Actions

name: BuildAMI_ONMERGE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v2



      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          mkdir staging
          ls -R
          pwd
          ls -al
          pwd
          
      - name: set path
        run: |
          ls -R
          packer build AMI.json
          
      - name: Run a multi-line script
        run: |
          pwd
          cd
          pwd
          ls -all

      
 
      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
           aws-access-key-id:  ${{secrets.AWS_ACCESS_KEY_ID_ROOT}}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROOT }}
           aws-region: 'us-east-1'
           
      - name: Packer build
        uses: ExitoLab/packer_build_action_aws@v0.2.10
        with:
          templateFile: 'AMI.json'
        env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_ROOT }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROOT }}
           SSH_KEY: ${{ secrets.SSH_KEY }}
           PACKER_LOG: 1
          

#       - uses: actions/checkout@v3
#       - name: Packer build -debug
#         uses: riznob/packer-build-action@v1.5
#         with:
#            templateFile: 'AMI.json'
#            workingDir: '.'
#            varFile: 'packers-vars.json'
#         env:
#            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_ROOT }}
#            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROOT }}
#            SSH_KEY: ${{ secrets.SSH_KEY }}
#            PACKER_LOG: 1
